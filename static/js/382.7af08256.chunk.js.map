{"version":3,"file":"static/js/382.7af08256.chunk.js","mappings":"mRAGaA,EAAcC,EAAAA,GAAAA,IAAH,+CAIXC,EAAWD,EAAAA,GAAAA,IAAH,sIAQRE,EAAYF,EAAAA,GAAAA,IAAH,6CAITG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,ySAcVK,EAAUL,EAAAA,GAAAA,IAAH,wDAKPM,GAAkBN,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,+R,SCpC5B,ECcqB,WAAO,IAAD,IASlB,IARCO,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAQC,EAAAA,EAAAA,GAASH,EAAII,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,SAAe,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAUI,aAAV,eAAiBC,OAAQ,MAChDC,EAAW,GACuB,OAAlC,UAAAJ,EAAYK,eAAZ,eAAqBC,UACvBF,EAAW,IAEXA,EAAW,UAAAJ,EAAYK,eAAZ,SAAqBE,OAArB,2BACGP,EAAYK,eADf,aACG,EAAqBE,QAC/B,UAGN,IAAKZ,EACH,OAAO,SAACa,EAAA,EAAD,IAGT,IAAMC,ECnC6B,SAAC,GAO/B,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,eACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,OAEA,MAAO,CACLL,YAAaA,EAAW,yCACcA,GADd,sCAGxBC,eAAAA,EACAC,SAAAA,EACAC,aAAcG,KAAKC,MAAqB,GAAfJ,GACzBC,aAAcA,EAAaI,MAAM,EAAG,GACpCH,OAAQA,EAAOI,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAEhD,CDiBwBC,CAAsB5B,GAE3Ce,EAMED,EANFC,YACAC,EAKEF,EALFE,eACAE,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,OACAH,EACEH,EADFG,SAGF,OACE,iCACE,2BACE,UAACzB,EAAD,YACE,UAACE,EAAD,CAAYmC,GAAIpB,EAAhB,WACE,SAAC,MAAD,CAAcqB,KAAK,OADrB,eAGA,SAACxC,EAAD,CAAayC,IAAKhB,EAAaiB,IAAKhB,KACpC,4BACE,0BACGA,EADH,KACqBG,EADrB,QAGA,UAAC1B,EAAD,YACE,uCADF,IACsByB,EADtB,QAGA,UAACzB,EAAD,YACE,qCADF,IACoBwB,MAEpB,UAACxB,EAAD,YACE,mCADF,IACkB2B,SAGpB,UAACxB,EAAD,YACE,mDACA,4BACE,SAACC,EAAD,CAAiBgC,GAAG,OAApB,mBACA,SAAChC,EAAD,CAAiBgC,GAAG,UAApB,iCAKR,SAAC,EAAAI,SAAD,CAAUC,UAAU,SAACrB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.styles.js","pages/MovieDetails/index.js","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/normalizeMovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviePoster = styled.img`\n  border-radius: 8px;\n`;\n\nexport const MovieBox = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: 280px 1fr;\n  gap: 16px;\n  padding: 16px;\n`;\n\nexport const MovieText = styled.div`\n  margin-top: 16px;\n`;\n\nexport const GoBackLink = styled(Link)`\n  position: absolute;\n  top: 32px;\n  left: 0;\n  z-index: 2;\n  background-color: white;\n  display: inline-flex;\n  gap: 8px;\n  padding: 4px 8px;\n  border-radius: 8px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n`;\n\nexport const LinkBox = styled.div`\n  display: grid;\n  gap: 16px;\n`;\n\nexport const InformationLink = styled(Link)`\n  background-color: white;\n  display: inline-flex;\n  justify-content: center;\n  width: 98px;\n  margin-right: 16px;\n  padding: 4px 8px;\n  border-radius: 8px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n`;\n","import MovieDetails from './MovieDetails';\n\nexport default MovieDetails;\n","import { useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport useFetch from 'utils/useFetch';\nimport { getMovie } from 'utils/movieApi';\nimport { TfiArrowLeft } from 'react-icons/tfi';\nimport Spiner from 'components/Spiner';\nimport { normalizeMovieDetails } from './normalizeMovieDetails';\nimport {\n  MovieBox,\n  MovieText,\n  MoviePoster,\n  GoBackLink,\n  InformationLink,\n  LinkBox,\n} from './MovieDetails.styles';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const movie = useFetch(id, getMovie);\n  const location = useLocation();\n\n  const initialPath = useRef(location?.state?.from || null);\n  let backLink = '';\n  if (initialPath.current?.pathname === '/') {\n    backLink = '/';\n  } else {\n    backLink = initialPath.current?.search\n      ? `/movies${initialPath.current?.search}`\n      : '/movies';\n  }\n\n  if (!movie) {\n    return <Spiner />;\n  }\n\n  const normalizeMovie = normalizeMovieDetails(movie);\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    release_date,\n    genres,\n    overview,\n  } = normalizeMovie;\n\n  return (\n    <>\n      <main>\n        <MovieBox>\n          <GoBackLink to={backLink}>\n            <TfiArrowLeft size=\"16\" /> Go back\n          </GoBackLink>\n          <MoviePoster src={poster_path} alt={original_title} />\n          <div>\n            <h2>\n              {original_title} ({release_date})\n            </h2>\n            <MovieText>\n              <b>User Score:</b> {vote_average}%\n            </MovieText>\n            <MovieText>\n              <b>Overview:</b> {overview}\n            </MovieText>\n            <MovieText>\n              <b>Genres:</b> {genres}\n            </MovieText>\n          </div>\n          <LinkBox>\n            <p>Additional Information</p>\n            <div>\n              <InformationLink to=\"cast\">Cast</InformationLink>\n              <InformationLink to=\"reviews\">Reviews</InformationLink>\n            </div>\n          </LinkBox>\n        </MovieBox>\n      </main>\n      <Suspense fallback={<Spiner />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n// useEffect(() => {\n//   if (movie) {\n//     return;\n//   }\n\n//   const fetchMovie = async () => {\n//     try {\n//       const movie = await getMovie(id);\n//       setMovie(normalizeMovieDetails(movie));\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   fetchMovie();\n// }, [id, movie]);\n","export const normalizeMovieDetails = ({\n  poster_path,\n  original_title,\n  overview,\n  vote_average,\n  release_date,\n  genres,\n}) => {\n  return {\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w400${poster_path}`\n      : `https://via.placeholder.com/400x600`,\n    original_title,\n    overview,\n    vote_average: Math.round(vote_average * 10),\n    release_date: release_date.slice(0, 4),\n    genres: genres.map(genre => genre.name).join(', '),\n  };\n};\n"],"names":["MoviePoster","styled","MovieBox","MovieText","GoBackLink","Link","LinkBox","InformationLink","id","useParams","movie","useFetch","getMovie","location","useLocation","initialPath","useRef","state","from","backLink","current","pathname","search","Spiner","normalizeMovie","poster_path","original_title","overview","vote_average","release_date","genres","Math","round","slice","map","genre","name","join","normalizeMovieDetails","to","size","src","alt","Suspense","fallback"],"sourceRoot":""}