{"version":3,"file":"static/js/943.492a4f98.chunk.js","mappings":"8NAGaA,EAAsBC,EAAAA,GAAAA,GAAH,0KAQnBC,EAAYD,EAAAA,GAAAA,GAAH,wQAaTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sBAETI,EAAaJ,EAAAA,GAAAA,EAAH,qKAUVK,EAAcL,EAAAA,GAAAA,IAAH,sB,SCzBlBM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,GAC1C,OACE,SAACZ,EAAD,WACE,UAACC,EAAD,CAAWY,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA/C,WACE,SAACH,EAAD,CACEY,IACEL,EAAW,yCAC2BA,GAD3B,sCAIbM,IAAKP,KAGP,SAACP,EAAD,UAAaO,QAXDE,EAenB,KAGN,EAMDP,EAAWa,aAAe,CACxBZ,OAAQ,IAGV,IC3CA,ED2CA,C,uJE3Caa,EAAepB,EAAAA,GAAAA,IAAH,wFAMZqB,EAAgBrB,EAAAA,GAAAA,KAAH,kSAabsB,EAAiBtB,EAAAA,GAAAA,MAAH,wLAWduB,EAAevB,EAAAA,GAAAA,OAAH,mQ,SC9BzB,ECQkB,SAAC,GAAkB,IAAhBwB,EAAe,EAAfA,SACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OACE,SAACP,EAAD,WACE,UAACC,EAAD,CAAeG,SARE,SAAAI,GACnBA,EAAEC,iBACFL,EAASE,GACTC,EAAU,GACX,EAIG,WACE,SAACL,EAAD,CACEQ,SAAU,SAAAF,GAAC,OAAID,EAAUC,EAAEG,OAAOC,MAAvB,EACXA,MAAON,EACPO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,SACLC,UAAQ,KAEV,SAACf,EAAD,CAAcU,KAAK,SAAnB,UACE,SAAC,MAAD,CAAWM,KAAK,aAKzB,E,0BCED,EAjCe,WACb,OAA4Bd,EAAAA,EAAAA,UAAS,MAArC,eAAOlB,EAAP,KAAeiC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBF,EAAJ,CAEA,IAAMG,EAAW,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaJ,EAAa,GAF/B,OAEVrC,EAFU,OAGhB0C,QAAQC,IAAI3C,EAAO4C,SACnBX,EAAUjC,EAAO4C,SAJD,gDAMhBF,QAAQC,IAAR,MANgB,yDAAH,qDASjBH,GAX8B,CAY/B,GAAE,CAACH,IAOJ,OACE,iCACE,SAAC,EAAD,CAAWpB,SAPM,SAAAQ,GACnBW,EAAgB,CAAES,MAAOpB,IACzBiB,QAAQC,IAAIlB,EACb,IAKIzB,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,ECpCD,G","sources":["components/MoviesList/MoviesList.styles.js","components/MoviesList/MoviesList.jsx","components/MoviesList/index.js","components/Searchbar/Searchbar.styles.js","components/Searchbar/index.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","pages/Movies/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesUnorderedList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  justify-items: center;\n  gap: 16px;\n  padding: 16px 16px;\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n  transition: all, ease, 250ms;\n  z-index: 1;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieLink = styled(Link)``;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 54px;\n  padding: 8px;\n  font-size: 16px;\n  z-index: 999;\n`;\n\nexport const MoviePoster = styled.img``;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MoviesUnorderedList,\n  MovieLink,\n  MovieItem,\n  MovieTitle,\n  MoviePoster,\n} from './MoviesList.styles';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesUnorderedList>\n      {movies.map(({ original_title, poster_path, id }) => {\n        return (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <MoviePoster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w400${poster_path}`\n                    : `https://via.placeholder.com/400x600`\n                }\n                alt={original_title}\n              />\n\n              <MovieTitle>{original_title}</MovieTitle>\n            </MovieLink>\n          </MovieItem>\n        );\n      })}\n    </MoviesUnorderedList>\n  );\n};\n\nMoviesList.propTypes = {\n  map: PropTypes.array,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n\nexport default MoviesList;\n","import MoviesList from './MoviesList';\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchbarBox = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 16px;\n`;\n\nexport const SearchbarForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n  padding: 4px;\n`;\n\nexport const SearchbarInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const SearchbarBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0;\n  opacity: 0.5;\n  background-color: white;\n  transition: all, ease, 250ms;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import Searchbar from './Searchbar';\n\nexport default Searchbar;\n","import React, { useState } from 'react';\nimport { TfiSearch } from 'react-icons/tfi';\nimport PropTypes from 'prop-types';\nimport {\n  SearchbarForm,\n  SearchbarInput,\n  SearchbarBtn,\n  SearchbarBox,\n} from './Searchbar.styles';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <SearchbarBox>\n      <SearchbarForm onSubmit={handleSubmit}>\n        <SearchbarInput\n          onChange={e => setSearch(e.target.value)}\n          value={search}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"search\"\n          required\n        />\n        <SearchbarBtn type=\"submit\">\n          <TfiSearch size=\"28\" />\n        </SearchbarBtn>\n      </SearchbarForm>\n    </SearchbarBox>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","//import { Test } from './Movies.styles';\nimport { useEffect, useState } from 'react';\nimport Searchbar from 'components/Searchbar';\nimport MoviesList from 'components/MoviesList';\nimport { searchMovies } from 'utils/movieApi';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n\n    const fetchMovies = async () => {\n      try {\n        const movies = await searchMovies(searchQuery, 1);\n        console.log(movies.results);\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [searchQuery]);\n\n  const onFormSubmit = value => {\n    setSearchParams({ query: value });\n    console.log(value);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onFormSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import Movies from './Movies';\n\nexport default Movies;\n"],"names":["MoviesUnorderedList","styled","MovieItem","MovieLink","Link","MovieTitle","MoviePoster","MoviesList","movies","location","useLocation","map","original_title","poster_path","id","to","state","from","src","alt","defaultProps","SearchbarBox","SearchbarForm","SearchbarInput","SearchbarBtn","onSubmit","useState","search","setSearch","e","preventDefault","onChange","target","value","type","autoComplete","autoFocus","placeholder","name","required","size","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchMovies","searchMovies","console","log","results","query"],"sourceRoot":""}