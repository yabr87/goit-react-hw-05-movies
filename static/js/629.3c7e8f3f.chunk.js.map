{"version":3,"file":"static/js/629.3c7e8f3f.chunk.js","mappings":"6RAEA,ECCe,WACb,OACE,SAAC,KAAD,CACEA,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,6BACVC,aAAa,8BAGlB,E,0BCVYC,EAAcC,EAAAA,GAAAA,IAAH,+CAIXC,EAAWD,EAAAA,GAAAA,IAAH,sIAQRE,EAAYF,EAAAA,GAAAA,IAAH,6CAITG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,ySAcVK,EAAUL,EAAAA,GAAAA,IAAH,wDAKPM,GAAkBN,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,+RCoF5B,EA5GqB,WAAO,IAAD,IAWlB,IAVP,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAETC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,SAAe,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAUI,aAAV,eAAiBC,OAAQ,MAChDC,EAAW,GACuB,OAAlC,UAAAJ,EAAYK,eAAZ,eAAqBC,UACvBF,EAAW,IAEXA,EAAW,UAAAJ,EAAYK,eAAZ,SAAqBE,OAArB,2BACGP,EAAYK,eADf,aACG,EAAqBE,QAC/B,UAuCN,IApCAC,EAAAA,EAAAA,YAAU,WACR,IAAIhB,EAAJ,CAIA,IAAMiB,EAAU,mCAAG,0HAEKC,EAAAA,EAAAA,IAASd,GAFd,OAETJ,EAFS,OAKbmB,EAMEnB,EANFmB,YACAC,EAKEpB,EALFoB,eACAC,EAIErB,EAJFqB,SACAC,EAGEtB,EAHFsB,aACAC,EAEEvB,EAFFuB,aACAC,EACExB,EADFwB,OAGFvB,EAAS,CACPkB,YAAaA,EAAW,yCACcA,GADd,sCAGxBC,eAAAA,EACAC,SAAAA,EACAC,aAAcG,KAAKC,MAAqB,GAAfJ,GACzBC,aAAcA,EAAaI,MAAM,EAAG,GACpCH,OAAQA,EAAOI,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QArBhC,gDAwBfC,QAAQC,IAAR,MACA/B,EAAS,KAzBM,yDAAH,qDA4BhBe,GA9BC,CA+BF,GAAE,CAACb,EAAIJ,EAAOE,IAEVF,EAAL,CAIA,IACEmB,EAMEnB,EANFmB,YACAC,EAKEpB,EALFoB,eACAE,EAIEtB,EAJFsB,aACAC,EAGEvB,EAHFuB,aACAC,EAEExB,EAFFwB,OACAH,EACErB,EADFqB,SAGF,OACE,iCACE,2BACE,UAAC5B,EAAD,YACE,UAACE,EAAD,CAAYuC,GAAItB,EAAhB,WACE,SAAC,MAAD,CAAcuB,KAAK,OADrB,eAGA,SAAC5C,EAAD,CAAa6C,IAAKjB,EAAakB,IAAKjB,KACpC,4BACE,0BACGA,EADH,KACqBG,EADrB,QAGA,UAAC7B,EAAD,YACE,uCADF,IACsB4B,EADtB,QAGA,UAAC5B,EAAD,YACE,qCADF,IACoB2B,MAEpB,UAAC3B,EAAD,YACE,mCADF,IACkB8B,SAGpB,UAAC3B,EAAD,YACE,mDACA,4BACE,SAACC,EAAD,CAAiBoC,GAAG,OAAOxB,MAAO,CAAEC,KAAML,GAA1C,mBAGA,SAACR,EAAD,CAAiBoC,GAAG,UAAUxB,MAAO,CAAEC,KAAML,GAA7C,iCAOR,SAAC,EAAAgC,SAAD,CAAUC,UAAU,SAAC,EAAD,IAApB,UACE,SAAC,KAAD,QA/CL,CAmDF,ECtHD,G","sources":["components/Spiner/index.js","components/Spiner/Spiner.jsx","pages/MovieDetails/MovieDetails.styles.js","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/index.js"],"sourcesContent":["import Spiner from './Spiner';\n\nexport default Spiner;\n","// import PropTypes from 'prop-types';\nimport { RotatingTriangles } from 'react-loader-spinner';\n\nconst Spiner = () => {\n  return (\n    <RotatingTriangles\n      visible={true}\n      height=\"70\"\n      width=\"70\"\n      ariaLabel=\"rotating-triangels-loading\"\n      wrapperClass=\"rotating-triangels-wrapper\"\n    />\n  );\n};\n\n// Spiner.propTypes = {\n//   loading: PropTypes.bool.isRequired,\n// };\n\nexport default Spiner;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviePoster = styled.img`\n  border-radius: 8px;\n`;\n\nexport const MovieBox = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: 280px 1fr;\n  gap: 16px;\n  padding: 16px;\n`;\n\nexport const MovieText = styled.div`\n  margin-top: 16px;\n`;\n\nexport const GoBackLink = styled(Link)`\n  position: absolute;\n  top: 32px;\n  left: 0;\n  z-index: 2;\n  background-color: white;\n  display: inline-flex;\n  gap: 8px;\n  padding: 4px 8px;\n  border-radius: 8px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n`;\n\nexport const LinkBox = styled.div`\n  display: grid;\n  gap: 16px;\n`;\n\nexport const InformationLink = styled(Link)`\n  background-color: white;\n  display: inline-flex;\n  justify-content: center;\n  width: 98px;\n  margin-right: 16px;\n  padding: 4px 8px;\n  border-radius: 8px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { getMovie } from 'utils/movieApi';\nimport { TfiArrowLeft } from 'react-icons/tfi';\nimport Spiner from 'components/Spiner';\nimport {\n  MovieBox,\n  MovieText,\n  MoviePoster,\n  GoBackLink,\n  InformationLink,\n  LinkBox,\n} from './MovieDetails.styles';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n\n  const { id } = useParams();\n  const location = useLocation();\n\n  const initialPath = useRef(location?.state?.from || null);\n  let backLink = '';\n  if (initialPath.current?.pathname === '/') {\n    backLink = '/';\n  } else {\n    backLink = initialPath.current?.search\n      ? `/movies${initialPath.current?.search}`\n      : '/movies';\n  }\n\n  useEffect(() => {\n    if (movie) {\n      return;\n    }\n\n    const fetchMovie = async () => {\n      try {\n        const movie = await getMovie(id);\n\n        const {\n          poster_path,\n          original_title,\n          overview,\n          vote_average,\n          release_date,\n          genres,\n        } = movie;\n\n        setMovie({\n          poster_path: poster_path\n            ? `https://image.tmdb.org/t/p/w400${poster_path}`\n            : `https://via.placeholder.com/400x600`,\n          original_title,\n          overview,\n          vote_average: Math.round(vote_average * 10),\n          release_date: release_date.slice(0, 4),\n          genres: genres.map(genre => genre.name).join(', '),\n        });\n      } catch (error) {\n        console.log(error);\n        navigate('/');\n      }\n    };\n    fetchMovie();\n  }, [id, movie, navigate]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    release_date,\n    genres,\n    overview,\n  } = movie;\n\n  return (\n    <>\n      <main>\n        <MovieBox>\n          <GoBackLink to={backLink}>\n            <TfiArrowLeft size=\"16\" /> Go back\n          </GoBackLink>\n          <MoviePoster src={poster_path} alt={original_title} />\n          <div>\n            <h2>\n              {original_title} ({release_date})\n            </h2>\n            <MovieText>\n              <b>User Score:</b> {vote_average}%\n            </MovieText>\n            <MovieText>\n              <b>Overview:</b> {overview}\n            </MovieText>\n            <MovieText>\n              <b>Genres:</b> {genres}\n            </MovieText>\n          </div>\n          <LinkBox>\n            <p>Additional Information</p>\n            <div>\n              <InformationLink to=\"cast\" state={{ from: location }}>\n                Cast\n              </InformationLink>\n              <InformationLink to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </InformationLink>\n            </div>\n          </LinkBox>\n        </MovieBox>\n      </main>\n      <Suspense fallback={<Spiner />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import MovieDetails from './MovieDetails';\n\nexport default MovieDetails;\n"],"names":["visible","height","width","ariaLabel","wrapperClass","MoviePoster","styled","MovieBox","MovieText","GoBackLink","Link","LinkBox","InformationLink","useState","movie","setMovie","navigate","useNavigate","id","useParams","location","useLocation","initialPath","useRef","state","from","backLink","current","pathname","search","useEffect","fetchMovie","getMovie","poster_path","original_title","overview","vote_average","release_date","genres","Math","round","slice","map","genre","name","join","console","log","to","size","src","alt","Suspense","fallback"],"sourceRoot":""}